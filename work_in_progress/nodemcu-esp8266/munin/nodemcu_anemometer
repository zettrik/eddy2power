#!/usr/bin/env python3
'''connect to mqtt broker and follow some channels'''

import os, re, sys, urllib
import paho.mqtt.client as mqtt
import multiprocessing
import time

mqtt_broker = "192.168.1.111"
mqtt_channel = "node/6/interrupts"

def on_connect(mqttc, userdata, flags, result_code):
    #print("connected to broker with result code = " + str(result_code))
    mqttc.subscribe(topic=mqtt_channel, qos=0)

def on_disconnect(mqttc, userdata, result_code):
    #print("disconnected from broker with result_code = " + str(result_code))
    return()

def on_message(mqttc, userdata, msg):
    #print('message received...')
    #print('topic: ' + msg.topic + ': ' + str(msg.payload))
    mqtt_string = msg.payload.decode('UTF-8')
    #print(mqtt_string)
    ad = mqtt_string.split(",")
    #print('ad0.value %s' % str(ad[0]))
    print('ad1.value %.4f' % (int(ad[1])*1000/int(ad[0])))
    #print('ad2.value %.4f' % (int(ad[2])*1000/int(ad[0])))
    mqttc.on_unsubscribe
    mqttc.on_disconnect
    sys.exit(0)

def on_subscribe(mqttc, userdata, mid, granted_qos):
    #print('subscribed to channel (qos=' + str(granted_qos) + ')')
    return()

def on_unsubscribe(mqttc, userdata, mid, granted_qos):
    #print('unsubscribed from channel (qos=' + str(granted_qos) + ')')
    return()

if __name__ == '__main__':
    # check pluginname for sensors (node_id)
    sensor = os.environ.get('code', sys.argv[0][(sys.argv[0].rfind('_') + 1):])

    if sensor == None:
        sensor = 1

    if len(sys.argv) == 2 and sys.argv[1] == "autoconf":
        print("yes")
    elif len(sys.argv) == 2 and sys.argv[1] == "config":
        print('graph_title NodeMCU Uptime')
        print('graph_vlabel seconds')
        print('graph_category sensors')
        print('graph_args --base 1000 -l 0')
        print('ad0.label uptime in days')
        print('ad1.label loop duration')
    else:
        mqttc = mqtt.Client()
        mqttc.on_connect = on_connect
        mqttc.on_disconnect = on_disconnect
        mqttc.on_message = on_message
        mqttc.on_subscribe = on_subscribe
        mqttc.on_unsubscribe = on_unsubscribe
        # connect to mqtt broker
        try:
            mqttc.connect(host=mqtt_broker, port=1883)
        except ConnectionRefusedError:
            sys.exit(1)

        # start mqtt listening process
        #mqttc.loop_forever()
        p = multiprocessing.Process(target=mqttc.loop_forever)
        p.start() 

        # wait max. 20 seconds for incoming mqtt messages
        p.join(20)
        # afterwards kill process if thread is still active
        if p.is_alive():
            # return zeros?
            #print('ad0.value %s' % str(0)
            #print('ad1.value %s' % str(0)
            mqttc.on_unsubscribe
            mqttc.on_disconnect
            p.terminate()
            p.join()
            sys.exit(2)

